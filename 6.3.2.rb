text = '私の誕生日は1977年7月17日です'
m = /(\d+)年(\d+)月(\d+)日/.match(text)
m[1]  #=> "1997"
m[2]  #=> "7"
m[3]  #=>  "17"
#キャプチャを活用する方法の一つはmatchメゾットを使うこと
#マッチしない場合はnilが返ります
/(\d+)年(\d+)月(\d+)日/.match(text)　#=> #<MatchData "1997......"
/(\d+)年(\d+)月(\d+)日/.match(foo)  #=> nil

text = '私の誕生日は1977年7月17日です'
#真偽値の判定とローカル変数への代入を同時にやってしまう
if m = /(\d+)年(\d+)月(\d+)日/.match(text)
  #マッチした場合の処理
else
  #マッチしなかった場合の処理
end

#MatchDataは[]を使って正規表現の処理結果を配列と同じような方法で取得できる
text = '私の誕生日は1977年7月17日です'
m = /(\d+)年(\d+)月(\d+)日/.match(text)
#キャプチャ１番目を取得
m[1]  #=> "1997"
#マッチした部分全体と取得
m[0]   #=>1997717
#キャプチャの２番目から２個取得
m[2, 2]   #=> ["7", "17"]
#最後のキャプチャを取得
m[-1]   #=> "17"
#Rangeを使って取得する
m[1..3] #=>  ["1997", "7", "17"]